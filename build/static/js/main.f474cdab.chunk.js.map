{"version":3,"sources":["components/base/AppInput.tsx","components/Movie.tsx","components/MovieList.tsx","store/movies/movies.getters.ts","store/movies/movies.setters.ts","store/movies/movies.store.ts","store/useStore.ts","services/api.service.ts","services/movie.service.ts","components/base/AppButton.tsx","containers/AllMovies.tsx","containers/ShorlistedMovies.tsx","pages/MoviesHome.tsx","routes/movie.routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppInput","props","label","Movie","movie","callToAction","className","title","differenceInDays","Date","fromUnixTime","release_date","MovieList","movies","searchStr","filterFn","moviesToRender","filter","toLocaleLowerCase","includes","length","map","index","getMoviesSelector","state","getShortlistedMoviesSelector","shorlistedMovies","setMoviesSelector","setMovies","shortlistMovieSelector","shortlist","removeShortlistedMovieSelector","removeShortlistedMovie","createMoviesStore","set","get","m","id","useStore","create","BASE_URL","endpoint","params","a","fetch","this","res","json","getMovies","ApiService","AppButton","AllMovies","search","shortlistMovie","shortlistedMovie","useEffect","fetchData","filterShorlistedMovies","useCallback","find","onClick","shortListMovie","ShortlistedMovies","shortlistedMovies","removeFromShorlist","MoviesHome","useState","setSearch","type","placeholder","value","onChange","e","target","MovieRoutes","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f474cdab.chunk.js","sourcesContent":["import { HTMLProps } from \"react\";\r\n\r\nexport interface IAppInputProps extends HTMLProps<HTMLInputElement> {\r\n    label: string;\r\n}\r\n\r\nexport default function AppInput(props: IAppInputProps) {\r\n\r\n    const { label = \"\" } = props\r\n\r\n    return (\r\n        <>\r\n            {label && <label>Search Movies: </label>}\r\n            <input {...props} />\r\n        </>\r\n    )\r\n}","import { differenceInDays, fromUnixTime } from \"date-fns\";\r\n\r\nexport default function Movie(props: { movie: any; callToAction: Function; }) {\r\n\r\n    const { movie, callToAction } = props\r\n\r\n    return (\r\n        <div className=\"movie\">\r\n            <h1 className=\"movie-title\">{movie.title}</h1>\r\n            <p className=\"movie-info\">\r\n                Release date:{\" \"}\r\n                {differenceInDays(new Date(), fromUnixTime(movie.release_date))}{\" \"}\r\n                days ago\r\n            </p>\r\n\r\n            {callToAction(movie)}\r\n\r\n        </div>\r\n    )\r\n}","import { IMovie } from \"../models/movie.interface\";\r\nimport Movie from \"./Movie\";\r\n\r\nexport interface IMovieListProps {\r\n  movies: any;\r\n  searchStr: any;\r\n  callToAction: any;\r\n  filterFn?: Function\r\n}\r\n\r\nexport default function MovieList(props: IMovieListProps) {\r\n\r\n  const { movies, searchStr, callToAction, filterFn = () => true } = props\r\n\r\n  const searchFilter = (movie: IMovie) => {\r\n    return movie.title.toLocaleLowerCase().includes(searchStr.toLocaleLowerCase())\r\n  }\r\n\r\n  const moviesToRender = movies.filter(filterFn).filter(searchFilter)\r\n\r\n  if (!moviesToRender.length) {\r\n    return <div className=\"empty-slot\">No Movies Found</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"movie-list max-height-100\">\r\n      {\r\n        moviesToRender.map((movie: IMovie, index: number) => (\r\n          <Movie movie={movie} key={index} callToAction={callToAction} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}","import { MyState } from \"../useStore\";\r\n\r\nexport const getMoviesSelector = (state: MyState) => state.movies\r\n\r\nexport const getShortlistedMoviesSelector = (state: MyState) => state.shorlistedMovies","import { MyState } from \"../useStore\";\r\n\r\nexport const setMoviesSelector = (state: MyState) => state.setMovies\r\n\r\nexport const shortlistMovieSelector = (state: MyState) => state.shortlist\r\n\r\nexport const removeShortlistedMovieSelector = (state: MyState) => state.removeShortlistedMovie\r\n","import { GetState, SetState } from \"zustand\";\r\nimport { IMovie } from \"../../models/movie.interface\";\r\nimport { MyState } from \"../useStore\";\r\n\r\nexport interface MoviesSlice {\r\n    movies: IMovie[];\r\n    setMovies: (movies: IMovie[]) => void;\r\n    shorlistedMovies: IMovie[],\r\n    shortlist: (movie: IMovie) => void;\r\n    removeShortlistedMovie: (movie: IMovie) => void;\r\n}\r\n\r\n\r\nconst createMoviesStore = (set: SetState<MyState>, get: GetState<MyState>) => ({\r\n    movies: [],\r\n    setMovies: (movies: IMovie[]) => {\r\n        set(() => ({ movies }));\r\n    },\r\n\r\n    shorlistedMovies: [],\r\n    shortlist: (movie: IMovie) => {\r\n        set((state) => ({ shorlistedMovies: [...state.shorlistedMovies, movie] }));\r\n    },\r\n    removeShortlistedMovie: (movie: IMovie) => {\r\n        set((state) => ({\r\n            shorlistedMovies: [...state.shorlistedMovies.filter(m => m.id !== movie.id)]\r\n        }));\r\n    }\r\n});\r\n\r\nexport default createMoviesStore;\r\n","import create from \"zustand\";\r\n\r\nimport createMoviesStore, { MoviesSlice } from \"./movies/movies.store\";\r\n\r\nexport type MyState = MoviesSlice;\r\n\r\nconst useStore = create<MyState>((set, get) => ({\r\n  ...createMoviesStore(set, get)\r\n}));\r\n\r\nexport default useStore;\r\n","class ApiService {\r\n\r\n    private BASE_URL = \"/\"\r\n\r\n    async get(endpoint: string, params?: any): Promise<any> {\r\n        const res = await fetch(this.BASE_URL + endpoint)\r\n        return await res.json()\r\n    }\r\n\r\n}\r\n\r\nexport default new ApiService()","import ApiService from \"./api.service\"\r\nimport { IMovie } from \"../models/movie.interface\"\r\n\r\nexport const getMovies = async (): Promise<IMovie[]> => {\r\n    return await ApiService.get('mock/movies.json')\r\n}","import { HTMLAttributes } from \"react\";\r\n\r\nexport interface IAppButtonProps extends HTMLAttributes<HTMLButtonElement> {\r\n    label: string;\r\n}\r\n\r\n\r\nexport default function AppButton(props: IAppButtonProps) {\r\n\r\n    const { label } = props\r\n\r\n    return (\r\n        <button {...props} >\r\n            {label}\r\n        </button>\r\n    )\r\n}","import MovieList from \"../components/MovieList\";\r\nimport { getMoviesSelector, getShortlistedMoviesSelector } from \"../store/movies/movies.getters\";\r\nimport { setMoviesSelector, shortlistMovieSelector } from \"../store/movies/movies.setters\";\r\nimport useStore from \"../store/useStore\";\r\nimport { useCallback, useEffect } from 'react';\r\nimport { getMovies } from \"../services/movie.service\";\r\nimport { IMovie } from \"../models/movie.interface\";\r\nimport AppButton from \"../components/base/AppButton\";\r\n\r\nexport default function AllMovies(props: { search: string }) {\r\n\r\n    const { search } = props\r\n\r\n    const movies = useStore(getMoviesSelector)\r\n    const setMovies = useStore(setMoviesSelector)\r\n    const shortlistMovie = useStore(shortlistMovieSelector)\r\n    const shortlistedMovie = useStore(getShortlistedMoviesSelector)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const movies = await getMovies()\r\n            setMovies(movies)\r\n        }\r\n\r\n        fetchData()\r\n    }, [setMovies])\r\n\r\n\r\n    const shortListMovie = (movie: IMovie) => {\r\n        shortlistMovie(movie)\r\n    };\r\n\r\n    const filterShorlistedMovies = useCallback((movie: IMovie) => {\r\n        return !shortlistedMovie.find(m => m.id === movie.id)\r\n    }, [shortlistedMovie])\r\n\r\n\r\n    return (\r\n        <section className=\"w-100\">\r\n            <h1 className=\"section-title\">Available Movies</h1>\r\n            <MovieList\r\n                movies={movies}\r\n                searchStr={search}\r\n                filterFn={filterShorlistedMovies}\r\n                callToAction={(movie: IMovie) => (\r\n                    <AppButton\r\n                        className=\"success\"\r\n                        onClick={() => shortListMovie(movie)}\r\n                        label=\"Add\"\r\n                    />\r\n                )}\r\n            />\r\n        </section>\r\n    )\r\n}","import AppButton from \"../components/base/AppButton\"\r\nimport MovieList from \"../components/MovieList\"\r\nimport { IMovie } from \"../models/movie.interface\"\r\nimport { getShortlistedMoviesSelector } from \"../store/movies/movies.getters\"\r\nimport { removeShortlistedMovieSelector } from \"../store/movies/movies.setters\"\r\nimport useStore from \"../store/useStore\"\r\n\r\nexport default function ShortlistedMovies(props: { search: string }) {\r\n\r\n    const { search } = props\r\n\r\n    const shortlistedMovies = useStore(getShortlistedMoviesSelector)\r\n    const removeShortlistedMovie = useStore(removeShortlistedMovieSelector)\r\n\r\n    const removeFromShorlist = (movie: IMovie) => {\r\n        removeShortlistedMovie(movie)\r\n    }\r\n\r\n    return (\r\n        <section className=\"w-100\">\r\n            <h1 className=\"section-title\">Shortlisted Movies</h1>\r\n            <MovieList\r\n                movies={shortlistedMovies}\r\n                searchStr={search}\r\n                callToAction={(movie: IMovie) => (\r\n                    <AppButton\r\n                        className=\"danger\"\r\n                        onClick={() => removeFromShorlist(movie)}\r\n                        label=\"Remove\"\r\n                    />\r\n                )}\r\n            />\r\n        </section>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport AppInput from \"../components/base/AppInput\";\r\nimport AllMovies from \"../containers/AllMovies\";\r\nimport ShortlistedMovies from \"../containers/ShorlistedMovies\";\r\n\r\nexport default function MoviesHome() {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n        <section className=\"movies-home\">\r\n            <div className=\"movies-search\">\r\n                <AppInput\r\n                    label={'Search Movies: '}\r\n                    type=\"search\"\r\n                    placeholder=\"Type for searching...\"\r\n                    value={search}\r\n                    onChange={(e: any) => setSearch(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"movies-list-wrapper\">\r\n                <AllMovies search={search} />\r\n                <ShortlistedMovies search={search} />\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n}","import { Routes, Route } from \"react-router-dom\";\r\nimport MoviesHome from \"../pages/MoviesHome\";\r\n\r\nexport default function MovieRoutes() {\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<MoviesHome />} />\r\n    </Routes>\r\n  )\r\n}\r\n","import { BrowserRouter } from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport MovieRoutes from \"./routes/movie.routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <MovieRoutes />\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}